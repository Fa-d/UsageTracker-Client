name: Architecture Enforcement

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  enforce-architecture:
    name: Enforce Clean Architecture
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: Grant execute permission
        run: chmod +x ./gradlew

      - name: Validate Architecture
        run: ./gradlew validateArchitecture

      - name: Generate Comprehensive Report
        if: always()
        run: ./gradlew generateArchitectureReport

      - name: Check Architecture Violations
        if: always()
        run: |
          if [ -f "build/reports/detekt/detekt.xml" ]; then
            violations=$(grep -c "CleanArchitectureViolation\|DomainLayerImpurity" build/reports/detekt/detekt.xml || echo "0")
            if [ "$violations" -gt 0 ]; then
              echo "‚ùå Found $violations architecture violations!"
              exit 1
            else
              echo "‚úÖ No architecture violations found"
            fi
          fi

      - name: Comment PR with Results
        if: github.event_name == 'pull_request' && always()
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');

            let comment = '## üèóÔ∏è Architecture Validation Results\n\n';

            // Read architecture report if exists
            try {
              const reportPath = 'build/reports/architecture/report.md';
              if (fs.existsSync(reportPath)) {
                const report = fs.readFileSync(reportPath, 'utf8');
                comment += report;
              } else {
                comment += '‚úÖ Architecture validation passed - no violations detected!';
              }
            } catch (error) {
              comment += '‚ö†Ô∏è Unable to read architecture report';
            }

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

      - name: Upload Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: architecture-enforcement-reports
          path: |
            build/reports/
          retention-days: 30